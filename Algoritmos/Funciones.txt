Listo:

- Lista creaNodo(int dato): recibe un entero llamado dato, y crea y retorna un puntero a un
nuevo nodo creado, cuyo campo info almacenará a dato y el puntero sig apunta a NULL.

- Lista insertaInicio(Lista L, int dato): recibe una lista L y un entero dato, y genera un
nuevo nodo que almacena a dato, e inserta el nuevo nodo al principio de la lista L, retornándola.

- Lista leeArchivo(char nombreArchivo[50]): recibe un nombre de archivo, y almacena los
enteros que posee el archivo en el mismo orden en una lista que luego retorna.

- void imprimeLista(Lista L): recibe una lista e imprime los números que almacena separados
por un espacio. Si la lista estuviese vacía, debe imprimir un “-”.

------------------------------------------------------------------------------------------------------------
Working on:

- Lista insertaFinal(Lista L, int dato): recibe una lista L y un entero dato, y genera un
nuevo nodo que almacena a dato, e inserta el nuevo nodo al final de la lista L, retornándola.

- int largoLista(Lista L): recibe una lista y retorna la cantidad de elementos que almacena.

- int sumaLista(Lista L): recibe una lista y retorna la suma de todos los elementos que almacena.


------------------------------------------------------------------------------------------------------------
Pendientes:

- Lista insertaOrdenadoLista(Lista L, int dato): recibe una lista L y un entero dato, y
genera un nuevo nodo que almacena a dato, e inserta el nuevo nodo en forma ordenada en la lista L,
retornándola.

- Lista ordenaLista(Lista L): recibe una lista L y, a partir de ella, genera una nueva lista pero
con sus valores ordenados. Retorna la nueva lista.

- int menorLista(Lista L): recibe una lista y retorna el menor valor que almacena.

- int mayorLista(Lista L): recibe una lista y retorna el mayor valor que almacena.


- Lista invierteLista(Lista L): recibe una lista L y, a partir de ella, genera una nueva lista pero
con sus valores invertidos. Retorna la nueva lista.

- bool perteneceLista(Lista L, int dato): recibe una lista L y un dato entero, y retorna
true si el dato está almacenado en L, y false si no lo está.

- Lista unionLista(Lista L, Lista M): recibe dos listas y, a partir de ellas, genera una nueva
lista con los elementos de ambas listas, pero sin elementos repetidos. Retorna la nueva lista.

- Lista interseccionLista(Lista L, Lista M): recibe dos listas y, a partir de ellas, genera
una nueva lista con los elementos en común de ambas listas. Retorna la nueva lista.

- Lista restaLista(Lista L, Lista M): recibe dos listas L y M y, a partir de ellas, genera una
nueva lista con los elementos que pertenecen a L pero que no pertenecen a M. Retorna la nueva lista.

- Lista borraLista(Lista L): recibe una lista y libera la memoria de cada nodo que posee,
retornando finalmente NULL.